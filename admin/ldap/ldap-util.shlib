# LDAP utility routines
#
# 20160130 bear - version 1.0
#

LDAP_FIFO="/tmp/$$.p"
LDAP_URI="ldapi:///"
LDAP_BASEDN="dc=wherever,dc=com"
LDAP_ADMIN="cn=ldapadmin"
LDAP_CREDS="/root/.ldapadmin"
LDAP_BASEOPTS="-x -y $LDAP_CREDS -D $LDAP_ADMIN,$LDAP_BASEDN -H $LDAP_URI"
LDAP_UID_MIN=10000
LDAP_UID_SEARCH_MIN=10001
LDAP_UID_SEARCH_MAX=10125
LDAP_TEST_OU="ou=test,$LDAP_BASEDN"
LDAP_USER_OU="ou=users,$LDAP_BASEDN"
LDAP_GROUP_OU="ou=groups,$LDAP_BASEDN"
LDAP_POLICY_OU="ou=policies,$LDAP_BASEDN"
LDAP_POLICY_DISUSER="cn=inactive,$LDAP_POLICY_OU"
LDAP_LOCKTIME_PERM="00000101000000Z"

trap cleanup INT HUP KILL EXIT

cleanup() {
	[ -p $LDAP_FIFO ] && rm $LDAP_FIFO
}

die() {
	echo $SCRIPTNAME: $2 >&2
	exit $1
}

ldap_modify_connect() {
	# ===> ldap_modify_connect object base_dn
	# establish a connection to ldapmodify for the purposes of doing one
	# or more modifications to object,base_dn

	mkfifo -m 600 $LDAP_FIFO
	ldapmodify $LDAP_BASEOPTS <$LDAP_FIFO &
	exec 3<&1 >$LDAP_FIFO
	#exec 3<&1 >/tmp/zldap_debug

	LDAP_CURRENT_OBJ=$1
	LDAP_CURRENT_OU=$2

	cat <<-EOLDIF
		dn: $LDAP_CURRENT_OBJ,$LDAP_CURRENT_OU
		changetype: modify
	EOLDIF
}

ldap_disconnect() {
	exec >&- 1<&3 3>&-
	sleep 1
}

ldap_obj_exists() {
	# ===> ldap_obj_exists object basedn
	# search ldap for object; return error if it doesn't exist

	if [ -z "$(ldapsearch -LLL $LDAP_BASEOPTS -b $2 $1)" ] ; then
		echo $SCRIPTNAME: no such object $1,$2 >&2
		return 1
	fi
}

ldap_attr_exists() {
	# ===> ldap_attr_exists object searchbase attribute [ value ]
	# check an object for an attribute, optionally with a specific value
	# returns true if the object has the attribute set (and has value,
	# if specified), false if not.
	
	obj=$1
	base=$2
	attr=$3
	xval=$4

	ldapsearch -LLL $LDAP_BASEOPTS -b $base $obj $attr | grep "$attr:\s*$xval" >/dev/null
	return $?
}

ldap_set() {
	# ===> ldap_set attribute value [ old_value ]
	# if a value is already set, trying to add it will result in an error
	# optionally contrain a replace to a specific value if object allows multiple values
	#
	# assumes an ldapmodify has been established on stdout

	attr=$1
	val=$2
	old_val=$3

	verb="replace"
	ldap_attr_exists $LDAP_CURRENT_OBJ $LDAP_CURRENT_OU $attr $old_val || verb="add"

	[ "$verb" = "replace" -a "$val" = "$old_val" ] && return 1

	if [ -z "$old_val" -o "$verb" = "add" ] ; then
		cat <<-EOLDIF
			$verb: $attr
			$attr: $val
		EOLDIF
	else
		cat <<-EOLDIF
			$verb: $attr
			$attr: $old_val
			$attr: $val
		EOLDIF
	fi
}
